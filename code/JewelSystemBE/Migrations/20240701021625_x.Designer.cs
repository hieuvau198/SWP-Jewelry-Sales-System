// <auto-generated />
using System;
using JewelSystemBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JewelSystemBE.Migrations
{
    [DbContext(typeof(JewelDbContext))]
    [Migration("20240701021625_x")]
    partial class x
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JewelSystemBE.ImageRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImageRecords");

                    b.HasData(
                        new
                        {
                            Id = "2f29b6a7-8010-4a90-853f-c896fd387793",
                            FileName = "dfyqz4e-f004994b-129e-44ad-853f-3eaae3112671.jpg",
                            Path = "dfyqz4e-f004994b-129e-44ad-853f-3eaae3112671.jpg"
                        },
                        new
                        {
                            Id = "58bbac95-17ef-484c-a0d8-24494f8d36a5",
                            FileName = "hentai.png",
                            Path = "hentai.png"
                        },
                        new
                        {
                            Id = "de9b5453-15d2-41a0-922e-1edbcc6e0bef",
                            FileName = "maxresdefault.jpg",
                            Path = "maxresdefault.jpg"
                        },
                        new
                        {
                            Id = "e4b1110f-0340-48d3-82b0-9315acc175e0",
                            FileName = "RDT_20240603_1700187451959011441817016.jpg",
                            Path = "RDT_20240603_1700187451959011441817016.jpg"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("AttendDate")
                        .HasColumnType("date")
                        .HasColumnName("attend_date");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_name");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerPoint")
                        .HasColumnType("int")
                        .HasColumnName("customer_point");

                    b.Property<string>("CustomerRank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_rank");

                    b.HasKey("CustomerId");

                    b.ToTable("customer", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = "C1",
                            AttendDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "John Doe",
                            CustomerPhone = "012345678",
                            CustomerPoint = 100,
                            CustomerRank = "Gold"
                        },
                        new
                        {
                            CustomerId = "C2",
                            AttendDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Jane Smith",
                            CustomerPhone = "012345677",
                            CustomerPoint = 80,
                            CustomerRank = "Silver"
                        },
                        new
                        {
                            CustomerId = "C3",
                            AttendDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Alice Johnson",
                            CustomerPhone = "012345676",
                            CustomerPoint = 50,
                            CustomerRank = "Bronze"
                        },
                        new
                        {
                            CustomerId = "C4",
                            AttendDate = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Bob Brown",
                            CustomerPhone = "012345675",
                            CustomerPoint = 120,
                            CustomerRank = "Bronze"
                        },
                        new
                        {
                            CustomerId = "C5",
                            AttendDate = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Emily Wilson",
                            CustomerPhone = "012345674",
                            CustomerPoint = 90,
                            CustomerRank = "Bronze"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Discount", b =>
                {
                    b.Property<string>("DiscountId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PublicDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.ToTable("discount", (string)null);

                    b.HasData(
                        new
                        {
                            DiscountId = "D1",
                            DiscountName = "Elegance",
                            DiscountRate = 0.12,
                            ExpireDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D2",
                            DiscountName = "Winter Warm-Up",
                            DiscountRate = 0.050000000000000003,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D3",
                            DiscountName = "Spring Special",
                            DiscountRate = 0.14999999999999999,
                            ExpireDate = new DateTime(2024, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D4",
                            DiscountName = "Autumn Breath",
                            DiscountRate = 0.10000000000000001,
                            ExpireDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D5",
                            DiscountName = "New Year Sale",
                            DiscountRate = 0.14999999999999999,
                            ExpireDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D6",
                            DiscountName = "Expired Sale 1",
                            DiscountRate = 0.059999999999999998,
                            ExpireDate = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D7",
                            DiscountName = "Radiant Reductions I",
                            DiscountRate = 0.089999999999999997,
                            ExpireDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D8",
                            DiscountName = "Sparkle Savings II",
                            DiscountRate = 0.10000000000000001,
                            ExpireDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D9",
                            DiscountName = "Radiant Reductions II",
                            DiscountRate = 0.070000000000000007,
                            ExpireDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D10",
                            DiscountName = "Sparkle Savings III",
                            DiscountRate = 0.080000000000000002,
                            ExpireDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "All",
                            PublicDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D11",
                            DiscountName = "Ring Gala",
                            DiscountRate = 0.10000000000000001,
                            ExpireDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Ring",
                            PublicDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D12",
                            DiscountName = "Wedding Night",
                            DiscountRate = 0.12,
                            ExpireDate = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Ring",
                            PublicDate = new DateTime(2024, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D13",
                            DiscountName = "For Your Love",
                            DiscountRate = 0.17000000000000001,
                            ExpireDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Ring",
                            PublicDate = new DateTime(2024, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D14",
                            DiscountName = "For Your Love II",
                            DiscountRate = 0.23999999999999999,
                            ExpireDate = new DateTime(2024, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Ring",
                            PublicDate = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D15",
                            DiscountName = "Wedding Night II",
                            DiscountRate = 0.14999999999999999,
                            ExpireDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Ring",
                            PublicDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D16",
                            DiscountName = "Necklace IV",
                            DiscountRate = 0.17999999999999999,
                            ExpireDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Necklace",
                            PublicDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D17",
                            DiscountName = "Necklace V",
                            DiscountRate = 0.13,
                            ExpireDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Necklace",
                            PublicDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D18",
                            DiscountName = "Necklace Special",
                            DiscountRate = 0.10000000000000001,
                            ExpireDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P001",
                            ProductType = "Necklace",
                            PublicDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D19",
                            DiscountName = "Earrings Speical III",
                            DiscountRate = 0.070000000000000007,
                            ExpireDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P003",
                            ProductType = "Earrings",
                            PublicDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D20",
                            DiscountName = "Earrings Speical VI",
                            DiscountRate = 0.10000000000000001,
                            ExpireDate = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P009",
                            ProductType = "Earrings",
                            PublicDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D21",
                            DiscountName = "Sapphire Bracelet Discount",
                            DiscountRate = 0.27000000000000002,
                            ExpireDate = new DateTime(2024, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P011",
                            ProductType = "Bracelet",
                            PublicDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D22",
                            DiscountName = "Emerald Necklace Discount",
                            DiscountRate = 0.20000000000000001,
                            ExpireDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P012",
                            ProductType = "Necklace",
                            PublicDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D23",
                            DiscountName = "Ruby Earrings Discount",
                            DiscountRate = 0.17999999999999999,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P013",
                            ProductType = "Earrings",
                            PublicDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D24",
                            DiscountName = "Sapphire Necklace Discount",
                            DiscountRate = 0.17999999999999999,
                            ExpireDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P014",
                            ProductType = "Necklace",
                            PublicDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D25",
                            DiscountName = "Diamond Necklace Discount",
                            DiscountRate = 0.22,
                            ExpireDate = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P015",
                            ProductType = "Necklace",
                            PublicDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "D26",
                            DiscountName = "Emerald Bracelet Discount",
                            DiscountRate = 0.20999999999999999,
                            ExpireDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "P016",
                            ProductType = "Bracelet",
                            PublicDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Gem", b =>
                {
                    b.Property<string>("GemId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gem_id");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("float");

                    b.Property<string>("GemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("gem_name");

                    b.Property<double>("GemPrice")
                        .HasColumnType("float")
                        .HasColumnName("gem_price");

                    b.Property<double>("GemWeight")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GemId");

                    b.ToTable("gem", (string)null);

                    b.HasData(
                        new
                        {
                            GemId = "GE001",
                            BuyPrice = 50000000.0,
                            GemCode = "JSG-R1",
                            GemName = "Natural Mozambique Ruby",
                            GemPrice = 58000000.0,
                            GemWeight = 0.97999999999999998,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE002",
                            BuyPrice = 170000000.0,
                            GemCode = "JSG-R2",
                            GemName = "Burmese Ruby",
                            GemPrice = 190000000.0,
                            GemWeight = 28.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE003",
                            BuyPrice = 8235000.0,
                            GemCode = "JSG-R3",
                            GemName = "Thai Ruby",
                            GemPrice = 9756000.0,
                            GemWeight = 9.9399999999999995,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE004",
                            BuyPrice = 1322012.0,
                            GemCode = "JSG-R4",
                            GemName = "India Ruby",
                            GemPrice = 1709078.0,
                            GemWeight = 5.9100000000000001,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE005",
                            BuyPrice = 6900000.0,
                            GemCode = "JSG-R5",
                            GemName = "Mozambique Ruby",
                            GemPrice = 7859078.0,
                            GemWeight = 0.33000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE006",
                            BuyPrice = 3700000.0,
                            GemCode = "JSG-R6",
                            GemName = "Heated Natural Ruby",
                            GemPrice = 4166666.0,
                            GemWeight = 0.34000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE007",
                            BuyPrice = 8989000.0,
                            GemCode = "JSG-R7",
                            GemName = "Mozambique Ruby",
                            GemPrice = 9789973.0,
                            GemWeight = 0.35999999999999999,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE008",
                            BuyPrice = 4950000.0,
                            GemCode = "JSG-R8",
                            GemName = "Mozambique Ruby (Heated)",
                            GemPrice = 5826558.0,
                            GemWeight = 0.48999999999999999,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE009",
                            BuyPrice = 11900000.0,
                            GemCode = "JSG-R9",
                            GemName = "Mozambique Ruby",
                            GemPrice = 13000000.0,
                            GemWeight = 0.48999999999999999,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE010",
                            BuyPrice = 3000000.0,
                            GemCode = "JSG-R10",
                            GemName = "Burma Ruby",
                            GemPrice = 3658000.0,
                            GemWeight = 0.54000000000000004,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE011",
                            BuyPrice = 30000000.0,
                            GemCode = "JSG-S1",
                            GemName = "Natural Ceylon Sapphire",
                            GemPrice = 35000000.0,
                            GemWeight = 1.02,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE012",
                            BuyPrice = 65000000.0,
                            GemCode = "JSG-S2",
                            GemName = "Burmese Sapphire",
                            GemPrice = 75000000.0,
                            GemWeight = 2.75,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE013",
                            BuyPrice = 22000000.0,
                            GemCode = "JSG-S3",
                            GemName = "Madagascar Sapphire",
                            GemPrice = 26000000.0,
                            GemWeight = 1.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE014",
                            BuyPrice = 18000000.0,
                            GemCode = "JSG-S4",
                            GemName = "Australian Sapphire",
                            GemPrice = 21000000.0,
                            GemWeight = 3.2000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE015",
                            BuyPrice = 120000000.0,
                            GemCode = "JSG-S5",
                            GemName = "Kashmir Sapphire",
                            GemPrice = 140000000.0,
                            GemWeight = 0.94999999999999996,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE016",
                            BuyPrice = 45000000.0,
                            GemCode = "JSG-S6",
                            GemName = "Heated Natural Sapphire",
                            GemPrice = 50000000.0,
                            GemWeight = 2.1000000000000001,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE017",
                            BuyPrice = 35000000.0,
                            GemCode = "JSG-S7",
                            GemName = "Thai Sapphire",
                            GemPrice = 40000000.0,
                            GemWeight = 1.8,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE018",
                            BuyPrice = 5000000.0,
                            GemCode = "JSG-S8",
                            GemName = "Montana Sapphire",
                            GemPrice = 6000000.0,
                            GemWeight = 0.71999999999999997,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE019",
                            BuyPrice = 28000000.0,
                            GemCode = "JSG-S9",
                            GemName = "Ethiopian Sapphire",
                            GemPrice = 32000000.0,
                            GemWeight = 1.3,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE020",
                            BuyPrice = 150000000.0,
                            GemCode = "JSG-S10",
                            GemName = "Padparadscha Sapphire",
                            GemPrice = 180000000.0,
                            GemWeight = 1.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE021",
                            BuyPrice = 5000000.0,
                            GemCode = "JSG-C1",
                            GemName = "Moonstone Cabochon",
                            GemPrice = 6000000.0,
                            GemWeight = 3.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE022",
                            BuyPrice = 12000000.0,
                            GemCode = "JSG-C2",
                            GemName = "Opal Cabochon",
                            GemPrice = 15000000.0,
                            GemWeight = 2.1000000000000001,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE023",
                            BuyPrice = 3000000.0,
                            GemCode = "JSG-C3",
                            GemName = "Turquoise Cabochon",
                            GemPrice = 4000000.0,
                            GemWeight = 4.7000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE024",
                            BuyPrice = 2000000.0,
                            GemCode = "JSG-C4",
                            GemName = "Labradorite Cabochon",
                            GemPrice = 3000000.0,
                            GemWeight = 5.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE025",
                            BuyPrice = 25000000.0,
                            GemCode = "JSG-C5",
                            GemName = "Star Sapphire Cabochon",
                            GemPrice = 30000000.0,
                            GemWeight = 3.2000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE026",
                            BuyPrice = 45000000.0,
                            GemCode = "JSG-C6",
                            GemName = "Cat's Eye Chrysoberyl Cabochon",
                            GemPrice = 52000000.0,
                            GemWeight = 2.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE027",
                            BuyPrice = 15000000.0,
                            GemCode = "JSG-C7",
                            GemName = "Jade Cabochon",
                            GemPrice = 18000000.0,
                            GemWeight = 6.7999999999999998,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE028",
                            BuyPrice = 5000000.0,
                            GemCode = "JSG-C8",
                            GemName = "Lapis Lazuli Cabochon",
                            GemPrice = 6000000.0,
                            GemWeight = 7.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE029",
                            BuyPrice = 2000000.0,
                            GemCode = "JSG-C9",
                            GemName = "Amazonite Cabochon",
                            GemPrice = 2500000.0,
                            GemWeight = 4.2000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE030",
                            BuyPrice = 7000000.0,
                            GemCode = "JSG-C10",
                            GemName = "Garnet Cabochon",
                            GemPrice = 8500000.0,
                            GemWeight = 3.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE031",
                            BuyPrice = 50000000.0,
                            GemCode = "JSG-E1",
                            GemName = "Colombian Emerald",
                            GemPrice = 58000000.0,
                            GemWeight = 1.2,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE032",
                            BuyPrice = 120000000.0,
                            GemCode = "JSG-E2",
                            GemName = "Zambian Emerald",
                            GemPrice = 140000000.0,
                            GemWeight = 2.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE033",
                            BuyPrice = 80000000.0,
                            GemCode = "JSG-E3",
                            GemName = "Brazilian Emerald",
                            GemPrice = 92000000.0,
                            GemWeight = 1.8,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE034",
                            BuyPrice = 60000000.0,
                            GemCode = "JSG-E4",
                            GemName = "Afghan Emerald",
                            GemPrice = 75000000.0,
                            GemWeight = 2.2000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE035",
                            BuyPrice = 70000000.0,
                            GemCode = "JSG-E5",
                            GemName = "Russian Emerald",
                            GemPrice = 82000000.0,
                            GemWeight = 1.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE036",
                            BuyPrice = 15000000.0,
                            GemCode = "JSG-E6",
                            GemName = "Synthetic Emerald",
                            GemPrice = 18000000.0,
                            GemWeight = 3.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE037",
                            BuyPrice = 100000000.0,
                            GemCode = "JSG-E7",
                            GemName = "Zambian Emerald",
                            GemPrice = 120000000.0,
                            GemWeight = 1.1000000000000001,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE038",
                            BuyPrice = 45000000.0,
                            GemCode = "JSG-E8",
                            GemName = "Colombian Emerald",
                            GemPrice = 52000000.0,
                            GemWeight = 0.90000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE039",
                            BuyPrice = 95000000.0,
                            GemCode = "JSG-E9",
                            GemName = "Brazilian Emerald",
                            GemPrice = 110000000.0,
                            GemWeight = 2.7000000000000002,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE040",
                            BuyPrice = 55000000.0,
                            GemCode = "JSG-E10",
                            GemName = "Ethiopian Emerald",
                            GemPrice = 65000000.0,
                            GemWeight = 1.3,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE041",
                            BuyPrice = 150000000.0,
                            GemCode = "JSG-D1",
                            GemName = "Round Brilliant Diamond",
                            GemPrice = 170000000.0,
                            GemWeight = 1.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE042",
                            BuyPrice = 250000000.0,
                            GemCode = "JSG-D2",
                            GemName = "Princess Cut Diamond",
                            GemPrice = 290000000.0,
                            GemWeight = 1.5,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE043",
                            BuyPrice = 400000000.0,
                            GemCode = "JSG-D3",
                            GemName = "Emerald Cut Diamond",
                            GemPrice = 450000000.0,
                            GemWeight = 2.0,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE044",
                            BuyPrice = 180000000.0,
                            GemCode = "JSG-D4",
                            GemName = "Oval Diamond",
                            GemPrice = 210000000.0,
                            GemWeight = 1.2,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE045",
                            BuyPrice = 320000000.0,
                            GemCode = "JSG-D5",
                            GemName = "Cushion Cut Diamond",
                            GemPrice = 370000000.0,
                            GemWeight = 1.8,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE046",
                            BuyPrice = 200000000.0,
                            GemCode = "JSG-D6",
                            GemName = "Asscher Cut Diamond",
                            GemPrice = 230000000.0,
                            GemWeight = 1.3,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE047",
                            BuyPrice = 280000000.0,
                            GemCode = "JSG-D7",
                            GemName = "Marquise Diamond",
                            GemPrice = 320000000.0,
                            GemWeight = 1.6000000000000001,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE048",
                            BuyPrice = 170000000.0,
                            GemCode = "JSG-D8",
                            GemName = "Radiant Cut Diamond",
                            GemPrice = 200000000.0,
                            GemWeight = 1.1000000000000001,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE049",
                            BuyPrice = 230000000.0,
                            GemCode = "JSG-D9",
                            GemName = "Pear Shaped Diamond",
                            GemPrice = 270000000.0,
                            GemWeight = 1.3999999999999999,
                            Unit = "ct"
                        },
                        new
                        {
                            GemId = "GE050",
                            BuyPrice = 150000000.0,
                            GemCode = "JSG-D10",
                            GemName = "Heart Shaped Diamond",
                            GemPrice = 180000000.0,
                            GemWeight = 1.0,
                            Unit = "ct"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Gold", b =>
                {
                    b.Property<string>("GoldId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gold_id");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoldCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoldName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("gold_name");

                    b.Property<double>("SellPrice")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GoldId");

                    b.ToTable("gold", (string)null);

                    b.HasData(
                        new
                        {
                            GoldId = "vang24k",
                            BuyPrice = 0.0,
                            Date = new DateTime(2024, 7, 1, 9, 16, 23, 517, DateTimeKind.Local).AddTicks(288),
                            GoldCode = "Vàng nữ trang 99,99%",
                            GoldName = "24K",
                            SellPrice = 0.0,
                            Unit = "VND/Chỉ"
                        },
                        new
                        {
                            GoldId = "vang18k",
                            BuyPrice = 0.0,
                            Date = new DateTime(2024, 7, 1, 9, 16, 23, 517, DateTimeKind.Local).AddTicks(304),
                            GoldCode = "Vàng nữ trang 75%",
                            GoldName = "18K",
                            SellPrice = 0.0,
                            Unit = "VND/Chỉ"
                        },
                        new
                        {
                            GoldId = "vang14k",
                            BuyPrice = 0.0,
                            Date = new DateTime(2024, 7, 1, 9, 16, 23, 517, DateTimeKind.Local).AddTicks(307),
                            GoldCode = "Vàng nữ trang 58,3%",
                            GoldName = "14K",
                            SellPrice = 0.0,
                            Unit = "VND/Chỉ"
                        },
                        new
                        {
                            GoldId = "vang10k",
                            BuyPrice = 0.0,
                            Date = new DateTime(2024, 7, 1, 9, 16, 23, 517, DateTimeKind.Local).AddTicks(309),
                            GoldCode = "Vàng nữ trang 41,7%",
                            GoldName = "10K",
                            SellPrice = 0.0,
                            Unit = "VND/Chỉ"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("invoice_id");

                    b.Property<string>("CashierFullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CustomerVoucher")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("customer_voucher");

                    b.Property<decimal>("EndTotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("end_total_price");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("invoice_date");

                    b.Property<string>("InvoiceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("invoice_type");

                    b.Property<string>("ManagerFullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_price");

                    b.Property<string>("UserFullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_id");

                    b.HasKey("InvoiceId");

                    b.ToTable("invoice", (string)null);

                    b.HasData(
                        new
                        {
                            InvoiceId = "I1",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C1",
                            CustomerName = "John Doe",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 798576000m,
                            InvoiceDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 882348000m,
                            UserFullname = "James Martinez",
                            UserId = "US3"
                        },
                        new
                        {
                            InvoiceId = "I2",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C2",
                            CustomerName = "Jane Smith",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 192000000m,
                            InvoiceDate = new DateTime(2024, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 240000000m,
                            UserFullname = "Mateo Martinez",
                            UserId = "US4"
                        },
                        new
                        {
                            InvoiceId = "I3",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C3",
                            CustomerName = "Alice Johnson",
                            CustomerVoucher = 1000000m,
                            EndTotalPrice = 209000000m,
                            InvoiceDate = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Pending",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 225000000m,
                            UserFullname = "Mateo Martinez",
                            UserId = "US4"
                        },
                        new
                        {
                            InvoiceId = "I4",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C5",
                            CustomerName = "Emily Wilson",
                            CustomerVoucher = 500000m,
                            EndTotalPrice = 84500000m,
                            InvoiceDate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 85000000m,
                            UserFullname = "Isabel Rodriguez",
                            UserId = "US6"
                        },
                        new
                        {
                            InvoiceId = "I5",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C2",
                            CustomerName = "Jane Smith",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 1200000000m,
                            InvoiceDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 1500000000m,
                            UserFullname = "Luna Taylor",
                            UserId = "US7"
                        },
                        new
                        {
                            InvoiceId = "I6",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C4",
                            CustomerName = "Bob Brown",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 2430000000m,
                            InvoiceDate = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 2700000000m,
                            UserFullname = "Isabel Rodriguez",
                            UserId = "US6"
                        },
                        new
                        {
                            InvoiceId = "I7",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C3",
                            CustomerName = "Alice Johnson",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 864000000m,
                            InvoiceDate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 960000000m,
                            UserFullname = "Luna Taylor",
                            UserId = "US7"
                        },
                        new
                        {
                            InvoiceId = "I8",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C1",
                            CustomerName = "John Doe",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 990000000m,
                            InvoiceDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 1100000000m,
                            UserFullname = "Mateo Martinez",
                            UserId = "US4"
                        },
                        new
                        {
                            InvoiceId = "I9",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C3",
                            CustomerName = "Alice Johnson",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 720000000m,
                            InvoiceDate = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 800000000m,
                            UserFullname = "Emma Young",
                            UserId = "US8"
                        },
                        new
                        {
                            InvoiceId = "I10",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C2",
                            CustomerName = "Jane Smith",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 1890000000m,
                            InvoiceDate = new DateTime(2024, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 2100000000m,
                            UserFullname = "Luna Taylor",
                            UserId = "US7"
                        },
                        new
                        {
                            InvoiceId = "I11",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C5",
                            CustomerName = "Emily Wilson",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 2700000000m,
                            InvoiceDate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Sale",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 3000000000m,
                            UserFullname = "Mateo Martinez",
                            UserId = "US4"
                        },
                        new
                        {
                            InvoiceId = "I12",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C4",
                            CustomerName = "Bob Brown",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 1500000000m,
                            InvoiceDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Buy",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 1500000000m,
                            UserFullname = "James Martinez",
                            UserId = "US3"
                        },
                        new
                        {
                            InvoiceId = "I13",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C3",
                            CustomerName = "Alice Johnson",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 2400000000m,
                            InvoiceDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Buy",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 2400000000m,
                            UserFullname = "Mateo Martinez",
                            UserId = "US4"
                        },
                        new
                        {
                            InvoiceId = "I14",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C5",
                            CustomerName = "Emily Wilson",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 810000000m,
                            InvoiceDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Buy",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 900000000m,
                            UserFullname = "Isabel Rodriguez",
                            UserId = "US6"
                        },
                        new
                        {
                            InvoiceId = "I15",
                            CashierFullname = "Theodore Garcia",
                            CashierId = "US5",
                            CustomerId = "C1",
                            CustomerName = "John Doe",
                            CustomerVoucher = 0m,
                            EndTotalPrice = 1200000000m,
                            InvoiceDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Complete",
                            InvoiceType = "Buy",
                            ManagerFullname = "Olivia Miller",
                            ManagerId = "US2",
                            StallId = "ST01",
                            StallName = "Stall A",
                            TotalPrice = 1200000000m,
                            UserFullname = "Luna Taylor",
                            UserId = "US7"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.InvoiceItem", b =>
                {
                    b.Property<string>("InvoiceItemId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("invoice_item_id");

                    b.Property<string>("DiscountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("discount_id");

                    b.Property<double>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("discount_rate");

                    b.Property<double>("EndTotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("end_total_price");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("invoice_id");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("product_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("StallId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("total_price");

                    b.Property<double>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("unit_price");

                    b.Property<string>("WarrantyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("warranty_id");

                    b.HasKey("InvoiceItemId");

                    b.ToTable("invoice_item", (string)null);

                    b.HasData(
                        new
                        {
                            InvoiceItemId = "II1",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 463488000.0,
                            InvoiceId = "I1",
                            ProductId = "P015",
                            ProductName = "Diamond Necklace",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 463488000.0,
                            UnitPrice = 463488000.0,
                            WarrantyId = "W1"
                        },
                        new
                        {
                            InvoiceItemId = "II2",
                            DiscountId = "D1",
                            DiscountRate = 0.20000000000000001,
                            EndTotalPrice = 165120000.0,
                            InvoiceId = "I1",
                            ProductId = "P021",
                            ProductName = "Diamond Earring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 206400000.0,
                            UnitPrice = 206400000.0,
                            WarrantyId = "W2"
                        },
                        new
                        {
                            InvoiceItemId = "II3",
                            DiscountId = "D3",
                            DiscountRate = 0.40000000000000002,
                            EndTotalPrice = 48000000.0,
                            InvoiceId = "I2",
                            ProductId = "P005",
                            ProductName = "Gold Bracelet",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 80000000.0,
                            UnitPrice = 80000000.0,
                            WarrantyId = "W3"
                        },
                        new
                        {
                            InvoiceItemId = "II4",
                            DiscountId = "D2",
                            DiscountRate = 0.29999999999999999,
                            EndTotalPrice = 144000000.0,
                            InvoiceId = "I2",
                            ProductId = "P010",
                            ProductName = "Silver Ring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 160000000.0,
                            UnitPrice = 80000000.0,
                            WarrantyId = "W4"
                        },
                        new
                        {
                            InvoiceItemId = "II5",
                            DiscountId = "D1",
                            DiscountRate = 0.20000000000000001,
                            EndTotalPrice = 100000000.0,
                            InvoiceId = "I3",
                            ProductId = "P003",
                            ProductName = "Platinum Necklace",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 125000000.0,
                            UnitPrice = 125000000.0,
                            WarrantyId = "W5"
                        },
                        new
                        {
                            InvoiceItemId = "II6",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 100000000.0,
                            InvoiceId = "I3",
                            ProductId = "P018",
                            ProductName = "Ruby Pendant",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 100000000.0,
                            UnitPrice = 100000000.0,
                            WarrantyId = "W6"
                        },
                        new
                        {
                            InvoiceItemId = "II7",
                            DiscountId = "D2",
                            DiscountRate = 0.29999999999999999,
                            EndTotalPrice = 35000000.0,
                            InvoiceId = "I4",
                            ProductId = "P011",
                            ProductName = "Emerald Ring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 50000000.0,
                            UnitPrice = 50000000.0,
                            WarrantyId = "W7"
                        },
                        new
                        {
                            InvoiceItemId = "II8",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 35000000.0,
                            InvoiceId = "I4",
                            ProductId = "P020",
                            ProductName = "Sapphire Bracelet",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 35000000.0,
                            UnitPrice = 35000000.0,
                            WarrantyId = "W8"
                        },
                        new
                        {
                            InvoiceItemId = "II9",
                            DiscountId = "D1",
                            DiscountRate = 0.20000000000000001,
                            EndTotalPrice = 8000000.0,
                            InvoiceId = "I4",
                            ProductId = "P030",
                            ProductName = "Gold Earrings",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 10000000.0,
                            UnitPrice = 10000000.0,
                            WarrantyId = "W9"
                        },
                        new
                        {
                            InvoiceItemId = "II10",
                            DiscountId = "D2",
                            DiscountRate = 0.29999999999999999,
                            EndTotalPrice = 288960000.0,
                            InvoiceId = "I5",
                            ProductId = "P021",
                            ProductName = "Diamond Earring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 412800000.0,
                            UnitPrice = 206400000.0,
                            WarrantyId = "W10"
                        },
                        new
                        {
                            InvoiceItemId = "II11",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 800000000.0,
                            InvoiceId = "I5",
                            ProductId = "P016",
                            ProductName = "Ruby Necklace",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 800000000.0,
                            UnitPrice = 800000000.0,
                            WarrantyId = "W11"
                        },
                        new
                        {
                            InvoiceItemId = "II12",
                            DiscountId = "D1",
                            DiscountRate = 0.20000000000000001,
                            EndTotalPrice = 1440000000.0,
                            InvoiceId = "I6",
                            ProductId = "P011",
                            ProductName = "Sapphire Ring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 1800000000.0,
                            UnitPrice = 900000000.0,
                            WarrantyId = "W12"
                        },
                        new
                        {
                            InvoiceItemId = "II13",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 600000000.0,
                            InvoiceId = "I6",
                            ProductId = "P018",
                            ProductName = "Emerald Bracelet",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 600000000.0,
                            UnitPrice = 600000000.0,
                            WarrantyId = "W13"
                        },
                        new
                        {
                            InvoiceItemId = "II14",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 480000000.0,
                            InvoiceId = "I7",
                            ProductId = "P013",
                            ProductName = "Opal Ring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 480000000.0,
                            UnitPrice = 480000000.0,
                            WarrantyId = "W14"
                        },
                        new
                        {
                            InvoiceItemId = "II15",
                            DiscountId = "D3",
                            DiscountRate = 0.40000000000000002,
                            EndTotalPrice = 288000000.0,
                            InvoiceId = "I7",
                            ProductId = "P022",
                            ProductName = "Opal Earring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 480000000.0,
                            UnitPrice = 240000000.0,
                            WarrantyId = "W15"
                        },
                        new
                        {
                            InvoiceItemId = "II16",
                            DiscountId = "D4",
                            DiscountRate = 0.5,
                            EndTotalPrice = 231744000.0,
                            InvoiceId = "I8",
                            ProductId = "P015",
                            ProductName = "Diamond Necklace",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 463488000.0,
                            UnitPrice = 463488000.0,
                            WarrantyId = "W16"
                        },
                        new
                        {
                            InvoiceItemId = "II17",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 1200000000.0,
                            InvoiceId = "I8",
                            ProductId = "P019",
                            ProductName = "Emerald Ring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 1200000000.0,
                            UnitPrice = 600000000.0,
                            WarrantyId = "W17"
                        },
                        new
                        {
                            InvoiceItemId = "II18",
                            DiscountId = "D2",
                            DiscountRate = 0.29999999999999999,
                            EndTotalPrice = 560000000.0,
                            InvoiceId = "I9",
                            ProductId = "P017",
                            ProductName = "Sapphire Necklace",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 800000000.0,
                            UnitPrice = 800000000.0,
                            WarrantyId = "W18"
                        },
                        new
                        {
                            InvoiceItemId = "II19",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 500000000.0,
                            InvoiceId = "I9",
                            ProductId = "P012",
                            ProductName = "Ruby Bracelet",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 500000000.0,
                            UnitPrice = 500000000.0,
                            WarrantyId = "W19"
                        },
                        new
                        {
                            InvoiceItemId = "II20",
                            DiscountId = "D3",
                            DiscountRate = 0.40000000000000002,
                            EndTotalPrice = 1080000000.0,
                            InvoiceId = "I10",
                            ProductId = "P011",
                            ProductName = "Sapphire Ring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 1800000000.0,
                            UnitPrice = 900000000.0,
                            WarrantyId = "W20"
                        },
                        new
                        {
                            InvoiceItemId = "II21",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 600000000.0,
                            InvoiceId = "I10",
                            ProductId = "P020",
                            ProductName = "Emerald Earring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 600000000.0,
                            UnitPrice = 600000000.0,
                            WarrantyId = "W21"
                        },
                        new
                        {
                            InvoiceItemId = "II22",
                            DiscountId = "D1",
                            DiscountRate = 0.20000000000000001,
                            EndTotalPrice = 1920000000.0,
                            InvoiceId = "I11",
                            ProductId = "P014",
                            ProductName = "Turquoise Ring",
                            Quantity = 2,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 2400000000.0,
                            UnitPrice = 1200000000.0,
                            WarrantyId = "W22"
                        },
                        new
                        {
                            InvoiceItemId = "II23",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 40000000.0,
                            InvoiceId = "I11",
                            ProductId = "P023",
                            ProductName = "Turquoise Cabochon",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 40000000.0,
                            UnitPrice = 40000000.0,
                            WarrantyId = "W23"
                        },
                        new
                        {
                            InvoiceItemId = "II24",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 1500000000.0,
                            InvoiceId = "I12",
                            ProductId = "P016",
                            ProductName = "Diamond Ring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 1500000000.0,
                            UnitPrice = 1500000000.0,
                            WarrantyId = "Not Applied"
                        },
                        new
                        {
                            InvoiceItemId = "II26",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 2400000000.0,
                            InvoiceId = "I13",
                            ProductId = "P013",
                            ProductName = "Opal Necklace",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 2400000000.0,
                            UnitPrice = 2400000000.0,
                            WarrantyId = "Not Applied"
                        },
                        new
                        {
                            InvoiceItemId = "II28",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 900000000.0,
                            InvoiceId = "I14",
                            ProductId = "P011",
                            ProductName = "Sapphire Ring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 900000000.0,
                            UnitPrice = 900000000.0,
                            WarrantyId = "Not Applied"
                        },
                        new
                        {
                            InvoiceItemId = "II29",
                            DiscountId = "No Discount",
                            DiscountRate = 0.0,
                            EndTotalPrice = 1200000000.0,
                            InvoiceId = "I15",
                            ProductId = "P014",
                            ProductName = "Turquoise Ring",
                            Quantity = 1,
                            StallId = "Some Stall Id",
                            StallName = "Some Stall Name",
                            TotalPrice = 1200000000.0,
                            UnitPrice = 1200000000.0,
                            WarrantyId = "Not Applied"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Jewel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("jewel", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsComplete = false,
                            Name = "Necklace"
                        },
                        new
                        {
                            Id = 2,
                            IsComplete = false,
                            Name = "Bracelet"
                        },
                        new
                        {
                            Id = 3,
                            IsComplete = false,
                            Name = "Ring"
                        },
                        new
                        {
                            Id = 4,
                            IsComplete = false,
                            Name = "Earrings"
                        },
                        new
                        {
                            Id = 5,
                            IsComplete = false,
                            Name = "Pendant"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("product_id");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gem_id");

                    b.Property<string>("GemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GemWeight")
                        .HasColumnType("float");

                    b.Property<string>("GoldId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gold_id");

                    b.Property<string>("GoldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GoldWeight")
                        .HasColumnType("float")
                        .HasColumnName("gold_weight");

                    b.Property<double>("LaborCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("labor_cost");

                    b.Property<double>("MarkupRate")
                        .HasColumnType("float")
                        .HasColumnName("markup_rate");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("product_code");

                    b.Property<string>("ProductImages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_images");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("product_name");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("product_type");

                    b.Property<int>("ProductWarranty")
                        .HasColumnType("int")
                        .HasColumnName("product_warranty");

                    b.Property<double>("ProductWeight")
                        .HasColumnType("float")
                        .HasColumnName("product_weight");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = "P001",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE001",
                            GemName = "Natural Mozambique Ruby",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 45.0,
                            LaborCost = 2000000.0,
                            MarkupRate = 1.2,
                            ProductCode = "NEGE00124K",
                            ProductImages = "P001.png",
                            ProductName = "Ruby Necklace NE-R1-24K",
                            ProductQuantity = 10,
                            ProductType = "Necklace",
                            ProductWarranty = 12,
                            ProductWeight = 50.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P002",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2023, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE012",
                            GemName = "Burmese Sapphire",
                            GemWeight = 0.0,
                            GoldId = "vang14k",
                            GoldName = "14K",
                            GoldWeight = 15.0,
                            LaborCost = 1500000.0,
                            MarkupRate = 1.1499999999999999,
                            ProductCode = "NES214K",
                            ProductImages = "P002.png",
                            ProductName = "Sapphire Necklace NE-S2-14K",
                            ProductQuantity = 15,
                            ProductType = "Necklace",
                            ProductWarranty = 12,
                            ProductWeight = 20.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P003",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE033",
                            GemName = "Brazilian Emerald",
                            GemWeight = 0.0,
                            GoldId = "vang18k",
                            GoldName = "18K",
                            GoldWeight = 13.0,
                            LaborCost = 1800000.0,
                            MarkupRate = 1.25,
                            ProductCode = "NEEME03318K",
                            ProductImages = "P003.png",
                            ProductName = "Emerald Earrings NE-EME033-18K",
                            ProductQuantity = 25,
                            ProductType = "Earrings",
                            ProductWarranty = 24,
                            ProductWeight = 18.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P004",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE041",
                            GemName = "Round Brilliant Diamond",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 20.0,
                            LaborCost = 2500000.0,
                            MarkupRate = 1.3,
                            ProductCode = "NEDIA04124K",
                            ProductImages = "P004.png",
                            ProductName = "Diamond Ring NE-DIA041-24K",
                            ProductQuantity = 30,
                            ProductType = "Ring",
                            ProductWarranty = 36,
                            ProductWeight = 25.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P005",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE005",
                            GemName = "Mozambique Ruby",
                            GemWeight = 0.0,
                            GoldId = "vang10k",
                            GoldName = "10K",
                            GoldWeight = 25.0,
                            LaborCost = 2200000.0,
                            MarkupRate = 1.1000000000000001,
                            ProductCode = "NERUB00510K",
                            ProductImages = "P005.png",
                            ProductName = "Ruby Bracelet NE-RUB005-10K",
                            ProductQuantity = 20,
                            ProductType = "Bracelet",
                            ProductWarranty = 12,
                            ProductWeight = 30.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P006",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE046",
                            GemName = "Asscher Cut Diamond",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 40.0,
                            LaborCost = 3000000.0,
                            MarkupRate = 1.3500000000000001,
                            ProductCode = "NEEMA04618K",
                            ProductImages = "P006.png",
                            ProductName = "Diamond Necklace NE-EMA046-24K",
                            ProductQuantity = 10,
                            ProductType = "Necklace",
                            ProductWarranty = 24,
                            ProductWeight = 45.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P007",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE013",
                            GemName = "Madagascar Sapphire",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 17.0,
                            LaborCost = 2000000.0,
                            MarkupRate = 1.2,
                            ProductCode = "NESAP01324K",
                            ProductImages = "P007.png",
                            ProductName = "Sapphire Ring NE-SAP013-24K",
                            ProductQuantity = 12,
                            ProductType = "Ring",
                            ProductWarranty = 18,
                            ProductWeight = 22.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P008",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE034",
                            GemName = "Afghan Emerald",
                            GemWeight = 0.0,
                            GoldId = "vang14k",
                            GoldName = "14K",
                            GoldWeight = 14.0,
                            LaborCost = 1700000.0,
                            MarkupRate = 1.1499999999999999,
                            ProductCode = "NEEME03414K",
                            ProductImages = "P008.png",
                            ProductName = "Emerald Necklace NE-EME034-14K",
                            ProductQuantity = 20,
                            ProductType = "Necklace",
                            ProductWarranty = 12,
                            ProductWeight = 18.5,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P009",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE043",
                            GemName = "Emerald Cut Diamond",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 22.0,
                            LaborCost = 2300000.0,
                            MarkupRate = 1.25,
                            ProductCode = "NEDIA04318K",
                            ProductImages = "P009.png",
                            ProductName = "Diamond Earrings NE-DIA043-24K",
                            ProductQuantity = 18,
                            ProductType = "Earrings",
                            ProductWarranty = 24,
                            ProductWeight = 27.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P010",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE003",
                            GemName = "Thai Ruby",
                            GemWeight = 0.0,
                            GoldId = "vang10k",
                            GoldName = "10K",
                            GoldWeight = 16.0,
                            LaborCost = 1600000.0,
                            MarkupRate = 1.1000000000000001,
                            ProductCode = "NERUB00310K",
                            ProductImages = "P010.png",
                            ProductName = "Ruby Ring NE-RUB003-10K",
                            ProductQuantity = 15,
                            ProductType = "Ring",
                            ProductWarranty = 12,
                            ProductWeight = 20.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P011",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE014",
                            GemName = "Australian Sapphire",
                            GemWeight = 0.0,
                            GoldId = "vang18k",
                            GoldName = "18K",
                            GoldWeight = 25.0,
                            LaborCost = 2100000.0,
                            MarkupRate = 1.22,
                            ProductCode = "NESAP01418K",
                            ProductImages = "P011.png",
                            ProductName = "Sapphire Bracelet NE-SAP014-18K",
                            ProductQuantity = 22,
                            ProductType = "Bracelet",
                            ProductWarranty = 18,
                            ProductWeight = 30.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P012",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2023, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE031",
                            GemName = "Colombian Emerald",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 35.0,
                            LaborCost = 2700000.0,
                            MarkupRate = 1.3,
                            ProductCode = "NEEME03124K",
                            ProductImages = "P012.png",
                            ProductName = "Emerald Necklace NE-EME031-24K",
                            ProductQuantity = 10,
                            ProductType = "Necklace",
                            ProductWarranty = 24,
                            ProductWeight = 40.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P013",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE004",
                            GemName = "India Ruby",
                            GemWeight = 0.0,
                            GoldId = "vang14k",
                            GoldName = "14K",
                            GoldWeight = 16.0,
                            LaborCost = 1800000.0,
                            MarkupRate = 1.1799999999999999,
                            ProductCode = "NERUB00414K",
                            ProductImages = "P013.png",
                            ProductName = "Ruby Earrings NE-RUB004-14K",
                            ProductQuantity = 14,
                            ProductType = "Earrings",
                            ProductWarranty = 12,
                            ProductWeight = 20.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P014",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE015",
                            GemName = "Kashmir Sapphire",
                            GemWeight = 0.0,
                            GoldId = "vang18k",
                            GoldName = "18K",
                            GoldWeight = 37.0,
                            LaborCost = 2800000.0,
                            MarkupRate = 1.3500000000000001,
                            ProductCode = "NESAP01518K",
                            ProductImages = "P014.png",
                            ProductName = "Sapphire Necklace NE-SAP015-18K",
                            ProductQuantity = 8,
                            ProductType = "Necklace",
                            ProductWarranty = 24,
                            ProductWeight = 42.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P015",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE044",
                            GemName = "Oval Diamond",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 20.0,
                            LaborCost = 2400000.0,
                            MarkupRate = 1.28,
                            ProductCode = "NEDIA04414K",
                            ProductImages = "P015.png",
                            ProductName = "Diamond Necklace NE-DIA044-24K",
                            ProductQuantity = 16,
                            ProductType = "Necklace",
                            ProductWarranty = 18,
                            ProductWeight = 24.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P016",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE035",
                            GemName = "Russian Emerald",
                            GemWeight = 0.0,
                            GoldId = "vang10k",
                            GoldName = "10K",
                            GoldWeight = 25.0,
                            LaborCost = 1900000.0,
                            MarkupRate = 1.22,
                            ProductCode = "NEEME03510K",
                            ProductImages = "P016.png",
                            ProductName = "Emerald Bracelet NE-EME035-10K",
                            ProductQuantity = 18,
                            ProductType = "Bracelet",
                            ProductWarranty = 12,
                            ProductWeight = 30.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P017",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE045",
                            GemName = "Cushion Cut Diamond",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 30.0,
                            LaborCost = 2900000.0,
                            MarkupRate = 1.3,
                            ProductCode = "NEDIA04524K",
                            ProductImages = "P017.png",
                            ProductName = "Diamond Bracelet NE-DIA045-24K",
                            ProductQuantity = 12,
                            ProductType = "Bracelet",
                            ProductWarranty = 36,
                            ProductWeight = 35.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P018",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2024, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE032",
                            GemName = "Zambian Emerald",
                            GemWeight = 0.0,
                            GoldId = "vang18k",
                            GoldName = "18K",
                            GoldWeight = 17.0,
                            LaborCost = 2300000.0,
                            MarkupRate = 1.25,
                            ProductCode = "NEEME03218K",
                            ProductImages = "P018.png",
                            ProductName = "Emerald Ring NE-EME032-18K",
                            ProductQuantity = 15,
                            ProductType = "Ring",
                            ProductWarranty = 24,
                            ProductWeight = 22.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P019",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE002",
                            GemName = "Burmese Ruby",
                            GemWeight = 0.0,
                            GoldId = "vang14k",
                            GoldName = "14K",
                            GoldWeight = 40.0,
                            LaborCost = 2700000.0,
                            MarkupRate = 1.28,
                            ProductCode = "NERUB00214K",
                            ProductImages = "P019.png",
                            ProductName = "Ruby Necklace NE-RUB002-14K",
                            ProductQuantity = 10,
                            ProductType = "Necklace",
                            ProductWarranty = 24,
                            ProductWeight = 45.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P020",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2016, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE011",
                            GemName = "Natural Ceylon Sapphire",
                            GemWeight = 0.0,
                            GoldId = "vang10k",
                            GoldName = "10K",
                            GoldWeight = 16.0,
                            LaborCost = 1600000.0,
                            MarkupRate = 1.1499999999999999,
                            ProductCode = "NESAP01110K",
                            ProductImages = "P020.png",
                            ProductName = "Sapphire Earrings NE-SAP011-10K",
                            ProductQuantity = 20,
                            ProductType = "Earrings",
                            ProductWarranty = 18,
                            ProductWeight = 20.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        },
                        new
                        {
                            ProductId = "P021",
                            BuyPrice = 0.0,
                            CreatedAt = new DateTime(2019, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GemId = "GE041",
                            GemName = "Round Brilliant Diamond",
                            GemWeight = 0.0,
                            GoldId = "vang24k",
                            GoldName = "24K",
                            GoldWeight = 18.0,
                            LaborCost = 2000000.0,
                            MarkupRate = 1.2,
                            ProductCode = "NEEMA04114K",
                            ProductImages = "P021.png",
                            ProductName = "Diamond Earrings NE-EMA041-24K",
                            ProductQuantity = 18,
                            ProductType = "Earrings",
                            ProductWarranty = 24,
                            ProductWeight = 22.0,
                            TotalPrice = 0.0,
                            UnitPrice = 0.0
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Stall", b =>
                {
                    b.Property<string>("StallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StallId");

                    b.ToTable("Stalls");

                    b.HasData(
                        new
                        {
                            StallId = "S1",
                            StaffName = "1",
                            StallDescription = "1",
                            StallName = "Ring",
                            StallType = "Ring",
                            UserId = "US3"
                        },
                        new
                        {
                            StallId = "S2",
                            StaffName = "1",
                            StallDescription = "1",
                            StallName = "Bracelet",
                            StallType = "Bracelet",
                            UserId = "US4"
                        },
                        new
                        {
                            StallId = "S3",
                            StaffName = "1",
                            StallDescription = "1",
                            StallName = "Necklace",
                            StallType = "Necklace",
                            UserId = "US6"
                        },
                        new
                        {
                            StallId = "S4",
                            StaffName = "1",
                            StallDescription = "1",
                            StallName = "Earring",
                            StallType = "Earring",
                            UserId = "US7"
                        },
                        new
                        {
                            StallId = "S5",
                            StaffName = "1",
                            StallDescription = "1",
                            StallName = "Anklet",
                            StallType = "Anklet",
                            UserId = "US8"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.StallItem", b =>
                {
                    b.Property<string>("StallItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("StallItemId");

                    b.ToTable("StallItems");

                    b.HasData(
                        new
                        {
                            StallItemId = "ae996ef2-bdfd-4f0d-967c-bff25284a1dc",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "fc27c631-d19e-4df9-acbe-653f8fb761a4",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "53510273-6d64-4dc2-b6e0-1793f7e9a33f",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "4a82df7d-3020-45da-84b2-095641ce2c6d",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "fff1e9c2-34d0-46a6-b6c1-058e5e58cab5",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "US1",
                            Email = "liam@gmail.com",
                            Fullname = "Liam Williams",
                            Password = "$2a$11$6vtGA1Xl0wk1735LJ9h/QuanpOZXynUfxAtwRI0ga.THyQkU/kd/m",
                            Role = "Admin",
                            Username = "user1"
                        },
                        new
                        {
                            UserId = "US2",
                            Email = "olivia@gmail.com",
                            Fullname = "Olivia Miller",
                            Password = "$2a$11$fTsEeQHb2ajbCk6Ivyw.Bu/Jkb3n5x0Mc6aOltnrhxVZxBn/uecKG",
                            Role = "Manager",
                            Username = "user2"
                        },
                        new
                        {
                            UserId = "US3",
                            Email = "james@gmail.com",
                            Fullname = "James Martinez",
                            Password = "$2a$11$qrglP8M6If4fzw8asS9GS.mJvQPWKeOFlRCkds7gLk4pUMbvBezZ2",
                            Role = "Sale",
                            Username = "user3"
                        },
                        new
                        {
                            UserId = "US4",
                            Email = "matao@gmail.com",
                            Fullname = "Mateo Martinez",
                            Password = "$2a$11$pJqLz8Y3scHtuVLPUaxxKucvPwqfzW2bimc4I0j6/C5fs6Q1Bonqm",
                            Role = "Sale",
                            Username = "user4"
                        },
                        new
                        {
                            UserId = "US5",
                            Email = "theodore@gmail.com",
                            Fullname = "Theodore Garcia",
                            Password = "$2a$11$2iXZTaGUnl6db.rzsFZjguIKNWim0ajbmF2Ae1IibsI1eF0JowAWi",
                            Role = "Cashier",
                            Username = "user5"
                        },
                        new
                        {
                            UserId = "US6",
                            Email = "isabel@gmail.com",
                            Fullname = "Isabel Rodriguez",
                            Password = "$2a$11$zr0E7x7XJcoJ8uCCYQfXYeUHvZP7gJ77mShL1WTSU5LPLitVMlS2O",
                            Role = "Sale",
                            Username = "user6"
                        },
                        new
                        {
                            UserId = "US7",
                            Email = "luna@gmail.com",
                            Fullname = "Luna Taylor",
                            Password = "$2a$11$cxejYJeBX9pqWhw8RMTsN.AcENFzQMxfItSPFlJYDdzmjQ7kcOUZO",
                            Role = "Sale",
                            Username = "user7"
                        },
                        new
                        {
                            UserId = "US8",
                            Email = "emma@gmail.com",
                            Fullname = "Emma Young",
                            Password = "$2a$11$ZGCOKranAihlL57KUqyy5.XSzpHDS27.cpGLnbe2Hh18XL6plJR0q",
                            Role = "Sale",
                            Username = "user8"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Warranty", b =>
                {
                    b.Property<string>("WarrantyId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("warranty_id");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("date")
                        .HasColumnName("expire_date");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("WarrantyId");

                    b.ToTable("warranty", (string)null);

                    b.HasData(
                        new
                        {
                            WarrantyId = "W1",
                            ExpireDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P002",
                            ProductName = "Product A",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WarrantyId = "W2",
                            ExpireDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P2",
                            ProductName = "Product B",
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WarrantyId = "W3",
                            ExpireDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P3",
                            ProductName = "Product C",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WarrantyId = "W4",
                            ExpireDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P3",
                            ProductName = "Product C",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
