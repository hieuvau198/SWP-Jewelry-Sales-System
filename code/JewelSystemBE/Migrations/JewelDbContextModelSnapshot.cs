// <auto-generated />
using System;
using JewelSystemBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JewelSystemBE.Migrations
{
    [DbContext(typeof(JewelDbContext))]
    partial class JewelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JewelSystemBE.ImageRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImageRecords");

                    b.HasData(
                        new
                        {
                            Id = "2f29b6a7-8010-4a90-853f-c896fd387793",
                            FileName = "dfyqz4e-f004994b-129e-44ad-853f-3eaae3112671.jpg",
                            Path = "dfyqz4e-f004994b-129e-44ad-853f-3eaae3112671.jpg"
                        },
                        new
                        {
                            Id = "58bbac95-17ef-484c-a0d8-24494f8d36a5",
                            FileName = "hentai.png",
                            Path = "hentai.png"
                        },
                        new
                        {
                            Id = "de9b5453-15d2-41a0-922e-1edbcc6e0bef",
                            FileName = "maxresdefault.jpg",
                            Path = "maxresdefault.jpg"
                        },
                        new
                        {
                            Id = "e4b1110f-0340-48d3-82b0-9315acc175e0",
                            FileName = "RDT_20240603_1700187451959011441817016.jpg",
                            Path = "RDT_20240603_1700187451959011441817016.jpg"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("AttendDate")
                        .HasColumnType("date")
                        .HasColumnName("attend_date");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_name");

                    b.Property<int>("CustomerPoint")
                        .HasColumnType("int")
                        .HasColumnName("customer_point");

                    b.Property<string>("CustomerRank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_rank");

                    b.HasKey("CustomerId");

                    b.ToTable("customer", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = "C1",
                            AttendDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "John Doe",
                            CustomerPoint = 100,
                            CustomerRank = "Gold"
                        },
                        new
                        {
                            CustomerId = "C2",
                            AttendDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Jane Smith",
                            CustomerPoint = 80,
                            CustomerRank = "Silver"
                        },
                        new
                        {
                            CustomerId = "C3",
                            AttendDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Alice Johnson",
                            CustomerPoint = 50,
                            CustomerRank = "Bronze"
                        },
                        new
                        {
                            CustomerId = "C4",
                            AttendDate = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Bob Brown",
                            CustomerPoint = 120,
                            CustomerRank = "Bronze"
                        },
                        new
                        {
                            CustomerId = "C5",
                            AttendDate = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerName = "Emily Wilson",
                            CustomerPoint = 90,
                            CustomerRank = "Bronze"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Discount", b =>
                {
                    b.Property<string>("DiscountId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PublicDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.ToTable("discount", (string)null);

                    b.HasData(
                        new
                        {
                            DiscountId = "1",
                            DiscountName = "Summer Sale",
                            DiscountRate = 0.0,
                            ExpireDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Jewelry 1",
                            PublicDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "2",
                            DiscountName = "Holiday Promotion",
                            DiscountRate = 0.0,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Jewelry 2",
                            PublicDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "3",
                            DiscountName = "Spring Clearance",
                            DiscountRate = 0.0,
                            ExpireDate = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Buyback",
                            ProductId = "All",
                            ProductType = "Jewelry 3",
                            PublicDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "4",
                            DiscountName = "Back-to-School Sale",
                            DiscountRate = 0.0,
                            ExpireDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Sale",
                            ProductId = "All",
                            ProductType = "Jewelry 4",
                            PublicDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DiscountId = "5",
                            DiscountName = "Winter Warm-up",
                            DiscountRate = 0.0,
                            ExpireDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderType = "Buyback",
                            ProductId = "All",
                            ProductType = "Jewelry 5",
                            PublicDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Gem", b =>
                {
                    b.Property<string>("GemId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gem_id");

                    b.Property<string>("GemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("gem_name");

                    b.Property<double>("GemPrice")
                        .HasColumnType("float")
                        .HasColumnName("gem_price");

                    b.HasKey("GemId");

                    b.ToTable("gem", (string)null);

                    b.HasData(
                        new
                        {
                            GemId = "1",
                            GemName = "Ruby",
                            GemPrice = 1000.0
                        },
                        new
                        {
                            GemId = "2",
                            GemName = "Sapphire",
                            GemPrice = 1500.0
                        },
                        new
                        {
                            GemId = "3",
                            GemName = "Emerald",
                            GemPrice = 1200.0
                        },
                        new
                        {
                            GemId = "4",
                            GemName = "Diamond",
                            GemPrice = 5000.0
                        },
                        new
                        {
                            GemId = "5",
                            GemName = "Topaz",
                            GemPrice = 800.0
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Gold", b =>
                {
                    b.Property<string>("GoldId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gold_id");

                    b.Property<string>("GoldName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("gold_name");

                    b.Property<double>("GoldPrice")
                        .HasColumnType("float")
                        .HasColumnName("gold_price");

                    b.HasKey("GoldId");

                    b.ToTable("gold", (string)null);

                    b.HasData(
                        new
                        {
                            GoldId = "1",
                            GoldName = "24K Gold",
                            GoldPrice = 6000.0
                        },
                        new
                        {
                            GoldId = "2",
                            GoldName = "22K Gold",
                            GoldPrice = 5500.0
                        },
                        new
                        {
                            GoldId = "3",
                            GoldName = "18K Gold",
                            GoldPrice = 4500.0
                        },
                        new
                        {
                            GoldId = "4",
                            GoldName = "14K Gold",
                            GoldPrice = 4000.0
                        },
                        new
                        {
                            GoldId = "5",
                            GoldName = "10K Gold",
                            GoldPrice = 3500.0
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("invoice_id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_id");

                    b.Property<decimal>("CustomerVoucher")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("customer_voucher");

                    b.Property<decimal>("EndTotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("end_total_price");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("date")
                        .HasColumnName("invoice_date");

                    b.Property<string>("InvoiceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("invoice_type");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_price");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_id");

                    b.HasKey("InvoiceId");

                    b.ToTable("invoice", (string)null);

                    b.HasData(
                        new
                        {
                            InvoiceId = "I1",
                            CustomerId = "C1",
                            CustomerVoucher = 50m,
                            EndTotalPrice = 450m,
                            InvoiceDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Pending",
                            InvoiceType = "Type A",
                            TotalPrice = 500m,
                            UserId = "U1"
                        },
                        new
                        {
                            InvoiceId = "I2",
                            CustomerId = "C2",
                            CustomerVoucher = 30m,
                            EndTotalPrice = 670m,
                            InvoiceDate = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Pending",
                            InvoiceType = "Type B",
                            TotalPrice = 700m,
                            UserId = "U2"
                        },
                        new
                        {
                            InvoiceId = "I3",
                            CustomerId = "C3",
                            CustomerVoucher = 20m,
                            EndTotalPrice = 280m,
                            InvoiceDate = new DateTime(2024, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Pending",
                            InvoiceType = "Type C",
                            TotalPrice = 300m,
                            UserId = "U3"
                        },
                        new
                        {
                            InvoiceId = "I4",
                            CustomerId = "C4",
                            CustomerVoucher = 40m,
                            EndTotalPrice = 960m,
                            InvoiceDate = new DateTime(2024, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Pending",
                            InvoiceType = "Type D",
                            TotalPrice = 1000m,
                            UserId = "U1"
                        },
                        new
                        {
                            InvoiceId = "I5",
                            CustomerId = "C5",
                            CustomerVoucher = 60m,
                            EndTotalPrice = 740m,
                            InvoiceDate = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceStatus = "Pending",
                            InvoiceType = "Type E",
                            TotalPrice = 800m,
                            UserId = "U2"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.InvoiceItem", b =>
                {
                    b.Property<string>("InvoiceItemId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("invoice_item_id");

                    b.Property<string>("DiscountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("discount_id");

                    b.Property<double>("DiscountRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("discount_rate");

                    b.Property<double>("EndTotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("end_total_price");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("invoice_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("product_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<double>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("total_price");

                    b.Property<double>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("unit_price");

                    b.Property<string>("WarrantyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("warranty_id");

                    b.HasKey("InvoiceItemId");

                    b.ToTable("invoice_item", (string)null);

                    b.HasData(
                        new
                        {
                            InvoiceItemId = "1",
                            DiscountId = "1",
                            DiscountRate = 0.0,
                            EndTotalPrice = 21.0,
                            InvoiceId = "I1",
                            ProductName = "Product 1",
                            Quantity = 2,
                            TotalPrice = 21.0,
                            UnitPrice = 10.5,
                            WarrantyId = "W1"
                        },
                        new
                        {
                            InvoiceItemId = "2",
                            DiscountId = "1",
                            DiscountRate = 0.14999999999999999,
                            EndTotalPrice = 21.890000000000001,
                            InvoiceId = "I1",
                            ProductName = "Product 2",
                            Quantity = 1,
                            TotalPrice = 21.890000000000001,
                            UnitPrice = 25.75,
                            WarrantyId = "W2"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Jewel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsComplete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("jewel", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsComplete = false,
                            Name = "Necklace"
                        },
                        new
                        {
                            Id = 2,
                            IsComplete = false,
                            Name = "Bracelet"
                        },
                        new
                        {
                            Id = 3,
                            IsComplete = false,
                            Name = "Ring"
                        },
                        new
                        {
                            Id = 4,
                            IsComplete = false,
                            Name = "Earrings"
                        },
                        new
                        {
                            Id = 5,
                            IsComplete = false,
                            Name = "Pendant"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gem_id");

                    b.Property<double>("GemWeight")
                        .HasColumnType("float")
                        .HasColumnName("gem_weight");

                    b.Property<string>("GoldId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gold_id");

                    b.Property<double>("GoldWeight")
                        .HasColumnType("float")
                        .HasColumnName("gold_weight");

                    b.Property<double>("LaborCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("labor_cost");

                    b.Property<double>("MarkupRate")
                        .HasColumnType("float")
                        .HasColumnName("markup_rate");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("product_code");

                    b.Property<string>("ProductImages")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("product_images");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("product_name");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("product_type");

                    b.Property<int>("ProductWarranty")
                        .HasColumnType("int")
                        .HasColumnName("product_warranty");

                    b.Property<double>("ProductWeight")
                        .HasColumnType("float")
                        .HasColumnName("product_weight");

                    b.HasKey("ProductId");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = "696a60bd-08d0-4034-84d4-6b50cc4a7edc",
                            CreatedAt = new DateTime(2024, 6, 13, 17, 27, 49, 803, DateTimeKind.Local).AddTicks(979),
                            GemId = "1",
                            GemWeight = 5.0,
                            GoldId = "1",
                            GoldWeight = 45.0,
                            LaborCost = 200.0,
                            MarkupRate = 1.2,
                            ProductCode = "P001",
                            ProductImages = "ruby_necklace.jpg",
                            ProductName = "Ruby Necklace",
                            ProductQuantity = 10,
                            ProductType = "Necklace",
                            ProductWarranty = 12,
                            ProductWeight = 50.0
                        },
                        new
                        {
                            ProductId = "31f33154-accc-4a59-b8a0-c106137fc9cc",
                            CreatedAt = new DateTime(2024, 6, 13, 17, 27, 49, 803, DateTimeKind.Local).AddTicks(985),
                            GemId = "2",
                            GemWeight = 2.0,
                            GoldId = "2",
                            GoldWeight = 18.0,
                            LaborCost = 100.0,
                            MarkupRate = 1.5,
                            ProductCode = "P002",
                            ProductImages = "sapphire_ring.jpg",
                            ProductName = "Sapphire Ring",
                            ProductQuantity = 5,
                            ProductType = "Ring",
                            ProductWarranty = 24,
                            ProductWeight = 20.0
                        },
                        new
                        {
                            ProductId = "67248496-5eed-438f-a7ff-c713e72d059d",
                            CreatedAt = new DateTime(2024, 6, 13, 17, 27, 49, 803, DateTimeKind.Local).AddTicks(989),
                            GemId = "3",
                            GemWeight = 3.0,
                            GoldId = "3",
                            GoldWeight = 27.0,
                            LaborCost = 150.0,
                            MarkupRate = 1.3,
                            ProductCode = "P003",
                            ProductImages = "emerald_bracelet.jpg",
                            ProductName = "Emerald Bracelet",
                            ProductQuantity = 8,
                            ProductType = "Bracelet",
                            ProductWarranty = 18,
                            ProductWeight = 30.0
                        },
                        new
                        {
                            ProductId = "b466c9b6-a35f-4a18-8375-6bdbb3fd60d5",
                            CreatedAt = new DateTime(2024, 6, 13, 17, 27, 49, 803, DateTimeKind.Local).AddTicks(993),
                            GemId = "4",
                            GemWeight = 1.5,
                            GoldId = "4",
                            GoldWeight = 13.5,
                            LaborCost = 180.0,
                            MarkupRate = 1.7,
                            ProductCode = "P004",
                            ProductImages = "diamond_earrings.jpg",
                            ProductName = "Diamond Earrings",
                            ProductQuantity = 12,
                            ProductType = "Earrings",
                            ProductWarranty = 24,
                            ProductWeight = 15.0
                        },
                        new
                        {
                            ProductId = "dab0e68b-af2e-4854-81b8-eb4aa824f186",
                            CreatedAt = new DateTime(2024, 6, 13, 17, 27, 49, 803, DateTimeKind.Local).AddTicks(999),
                            GemId = "5",
                            GemWeight = 2.5,
                            GoldId = "5",
                            GoldWeight = 7.5,
                            LaborCost = 90.0,
                            MarkupRate = 1.1000000000000001,
                            ProductCode = "P005",
                            ProductImages = "topaz_pendant.jpg",
                            ProductName = "Topaz Pendant",
                            ProductQuantity = 20,
                            ProductType = "Pendant",
                            ProductWarranty = 6,
                            ProductWeight = 10.0
                        },
                        new
                        {
                            ProductId = "32007392-1cbb-437d-8cf4-bc6aac900805",
                            CreatedAt = new DateTime(2024, 6, 13, 17, 27, 49, 803, DateTimeKind.Local).AddTicks(1002),
                            GemId = "1",
                            GemWeight = 4.0,
                            GoldId = "2",
                            GoldWeight = 21.0,
                            LaborCost = 130.0,
                            MarkupRate = 1.2,
                            ProductCode = "P006",
                            ProductImages = "ruby_bracelet.jpg",
                            ProductName = "Ruby Bracelet",
                            ProductQuantity = 7,
                            ProductType = "Bracelet",
                            ProductWarranty = 12,
                            ProductWeight = 25.0
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Stall", b =>
                {
                    b.Property<string>("StallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StallType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StallId");

                    b.ToTable("Stalls");

                    b.HasData(
                        new
                        {
                            StallId = "2adc5ec3-5125-4395-803a-ce3294224ca3",
                            StaffId = "Some Staff Id",
                            StallDescription = "Some Stall Description",
                            StallName = "Some Stall Name",
                            StallType = "None"
                        },
                        new
                        {
                            StallId = "2958fd29-14cf-412f-b4a8-6584871919fc",
                            StaffId = "Some Staff Id",
                            StallDescription = "Some Stall Description",
                            StallName = "Some Stall Name",
                            StallType = "None"
                        },
                        new
                        {
                            StallId = "c25a4a96-41c5-4626-9132-8ba0ae2c4cbc",
                            StaffId = "Some Staff Id",
                            StallDescription = "Some Stall Description",
                            StallName = "Some Stall Name",
                            StallType = "None"
                        },
                        new
                        {
                            StallId = "3f6a1cfc-ab83-4d95-8ebc-430cb6830286",
                            StaffId = "Some Staff Id",
                            StallDescription = "Some Stall Description",
                            StallName = "Some Stall Name",
                            StallType = "None"
                        },
                        new
                        {
                            StallId = "a56eada0-5eb7-4076-afd1-5c6bcd16eacb",
                            StaffId = "Some Staff Id",
                            StallDescription = "Some Stall Description",
                            StallName = "Some Stall Name",
                            StallType = "None"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.StallItem", b =>
                {
                    b.Property<string>("StallItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("StallItemId");

                    b.ToTable("StallItems");

                    b.HasData(
                        new
                        {
                            StallItemId = "b63bbb8c-2113-4b0a-9fd0-0e840e8fbb58",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "ac354895-1634-44c7-8956-d4a18bf26350",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "15b76029-c3f9-4dbb-b261-ee3d0ff2b32e",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "3013554d-b590-42cf-a00e-99e9f8276608",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        },
                        new
                        {
                            StallItemId = "5ddbe557-d600-4f08-a8da-ccb6dc348755",
                            ProductId = "Some Product Id",
                            ProductName = "Some Product Name",
                            quantity = 0
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            Email = "user1@example.com",
                            Fullname = "User One",
                            Password = "$2a$11$r1CgM4dpyw4ojJ2dOPGgkeJZcMfTCQQ.LvMecHfQIxZLe/Y8rrD3S",
                            Role = "Admin",
                            Username = "user1"
                        },
                        new
                        {
                            UserId = "2",
                            Email = "user2@example.com",
                            Fullname = "User Two",
                            Password = "$2a$11$WIWsRPNH6MU1FSATT2MRb.71.HC6lQlXdygobEWqqOqbB5CLtZlby",
                            Role = "User",
                            Username = "user2"
                        },
                        new
                        {
                            UserId = "3",
                            Email = "user3@example.com",
                            Fullname = "User Three",
                            Password = "$2a$11$aRxMcATv5QkElKgcCUZZv.huobbkU5Hg6oAWAZVqzW6.dgJQ/Jnca",
                            Role = "User",
                            Username = "user3"
                        },
                        new
                        {
                            UserId = "4",
                            Email = "user4@example.com",
                            Fullname = "User Four",
                            Password = "$2a$11$9D7fERnf2w0JviJxkLG7u.69IevsGoncT9gTFtZpG/qcgiKGeOlrC",
                            Role = "User",
                            Username = "user4"
                        },
                        new
                        {
                            UserId = "5",
                            Email = "user5@example.com",
                            Fullname = "User Five",
                            Password = "$2a$11$QDbBzgSTk394OzfrqcK1z.PSD6Xtgbiql4BFZH4NQxQrr3wSjwMaa",
                            Role = "User",
                            Username = "user5"
                        });
                });

            modelBuilder.Entity("JewelSystemBE.Model.Warranty", b =>
                {
                    b.Property<string>("WarrantyId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("warranty_id");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("date")
                        .HasColumnName("expire_date");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("WarrantyId");

                    b.ToTable("warranty", (string)null);

                    b.HasData(
                        new
                        {
                            WarrantyId = "W1",
                            ExpireDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P1",
                            ProductName = "Product A",
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WarrantyId = "W2",
                            ExpireDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P2",
                            ProductName = "Product B",
                            StartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WarrantyId = "W3",
                            ExpireDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P3",
                            ProductName = "Product C",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            WarrantyId = "11a657c6-ca25-4124-b237-67f0b52fba1f",
                            ExpireDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = "P3",
                            ProductName = "Product C",
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
